{"version":3,"sources":["PhonesList.js","PhoneDetails.js","App.js","index.js"],"names":["PhonesList","phonesList","className","map","phone","to","id","alt","name","src","imageUrl","href","snippet","PhoneDetails","match","useState","setPhone","history","useHistory","useEffect","fetch","params","phoneId","then","res","json","images","type","onClick","goBack","description","image","Math","random","availability","param","battery","talkTime","standbyTime","storage","ram","flash","connectivity","wifi","bluetooth","infrared","gps","android","os","ui","sizeAndWeight","dimensions","dim","weight","display","screenSize","screenResolution","touchScreen","hardware","cpu","usb","audioJack","fmRadio","accelerometer","camera","primary","features","feature","additionalFeatures","App","setPhonesList","query","setQuery","sortOrder","setSortORder","visiblePhones","setVisiblePhones","response","result","filter","item","toLowerCase","includes","sort","a","b","localeCompare","age","exact","path","onChange","e","target","value","placeholder","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.251c9ee1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const PhonesList = ({ phonesList }) => {\n\n  return (\n    <ul className=\"phones\">\n      {phonesList.map(phone => (\n        <li key={phone.id} className=\"thumbnail\">\n        <Link to={`/static_phone_catalogue/phones/${phone.id}`} className=\"thumb\">\n          <img alt={phone.name} src={`static_phone_catalogue/${phone.imageUrl}`} />\n        </Link>\n\n        <div className=\"phones__btn-buy-wrapper\">\n          <a className=\"btn btn-success\" href=\"#buy\">\n            Add\n          </a>\n        </div>\n\n        <Link to={`/static_phone_catalogue/phones/${phone.id}`}>{phone.name}</Link>\n        <p>{phone.snippet}</p>\n      </li>\n      ))}\n    </ul>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\n\nexport const PhoneDetails = ({ match }) => {\nconst [phone, setPhone] = useState({});\nlet history = useHistory();\n\n  useEffect(() => {\n    fetch(`https://mate-academy.github.io/phone-catalogue-static/api/phones/${match.params.phoneId}.json`)\n      .then(res => res.json())\n      .then (phone => setPhone(phone))\n  }, []);\n\n  if (!phone.id) {\n    return null;\n  }\n\n  return (\n    <div className=\"col-md-10\">\n        <img\n          className=\"phone\"\n          src={`../${phone.images[0]}`}\n          alt={phone.name}\n        />\n\n        <button \n          type=\"button\"\n          onClick={() => history.goBack()}\n        >\n          Back\n        </button>\n        <button type=\"button\">Add to basket</button>\n\n        <h1>{phone.name}</h1>\n\n        <p>{phone.description}</p>\n\n        <ul className=\"phone-thumbs\">\n          {phone.images.map(image => (\n            <li key={Math.random()}>\n              <img src={`../${image}`} alt=\"\" />\n            </li>\n          ))}\n\n        </ul>\n\n        <ul className=\"specs\">\n          <li>\n            <span>Availability and Networks</span>\n            <dl>\n              <dt>Availability</dt>\n              {phone.availability.map((param) => (\n                <dd key={Math.random()}>{param}</dd>\n              ))}\n              \n            </dl>\n          </li>\n          <li>\n            <span>Battery</span>\n            <dl>\n              <dt>Type</dt>\n              <dd>{phone.battery.type}</dd>\n              <dt>Talk Time</dt>\n              <dd>{phone.battery.talkTime}</dd>\n              <dt>Standby time (max)</dt>\n              <dd>{phone.battery.standbyTime}</dd>\n            </dl>\n          </li>\n          <li>\n            <span>Storage and Memory</span>\n            <dl>\n              <dt>RAM</dt>\n              <dd>{phone.storage.ram}</dd>\n              <dt>Internal Storage</dt>\n              <dd>{phone.storage.flash}</dd>\n            </dl>\n          </li>\n          <li>\n            <span>Connectivity</span>\n            <dl>\n              <dt>Network Support</dt>\n              <dd> </dd>\n              <dt>WiFi</dt>\n              <dd>{phone.connectivity.wifi}</dd>\n              <dt>Bluetooth</dt>\n              <dd>{phone.connectivity.bluetooth}</dd>\n              <dt>Infrared</dt>\n              <dd>{phone.connectivity.infrared ? '✓' : '✘'}</dd>\n              <dt>GPS</dt>\n              <dd>{phone.connectivity.gps ? '✓' : '✘'}</dd>\n            </dl>\n          </li>\n          <li>\n            <span>Android</span>\n            <dl>\n              <dt>OS Version</dt>\n              <dd>{phone.android.os}</dd>\n              <dt>UI</dt>\n              <dd>{phone.android.ui}</dd>\n            </dl>\n          </li>\n          <li>\n            <span>Size and Weight</span>\n            <dl>\n              <dt>Dimensions</dt>\n              {phone.sizeAndWeight.dimensions.map(dim => (\n                <dd key={Math.random()}>{dim}</dd>\n              ))}\n              <dt>Weight</dt>\n              <dd>{phone.sizeAndWeight.weight}</dd>\n            </dl>\n          </li>\n          <li>\n            <span>Display</span>\n            <dl>\n              <dt>Screen size</dt>\n              <dd>{phone.display.screenSize}</dd>\n              <dt>Screen resolution</dt>\n              <dd>{phone.display.screenResolution}</dd>\n              <dt>Touch screen</dt>\n              <dd>{phone.display.touchScreen ? '✓' : '✘'}</dd>\n            </dl>\n          </li>\n          <li>\n            <span>Hardware</span>\n            <dl>\n              <dt>CPU</dt>\n              <dd>{phone.hardware.cpu}</dd>\n              <dt>USB</dt>\n              <dd>{phone.hardware.usb}</dd>\n              <dt>Audio / headphone jack</dt>\n              <dd>{phone.hardware.audioJack}</dd>\n              <dt>FM Radio</dt>\n              <dd>{phone.hardware.fmRadio ? '✓' : '✘'}</dd>\n              <dt>Accelerometer</dt>\n              <dd>{phone.hardware.accelerometer ? '✓' : '✘'}</dd>\n            </dl>\n          </li>\n          <li>\n            <span>Camera</span>\n            <dl>\n              <dt>Primary</dt>\n              <dd>{phone.camera.primary}</dd>\n              <dt>Features</dt>\n              {phone.camera.features.map(feature => (\n                <dd key={Math.random()}>{feature}</dd>\n              ))}\n              \n            </dl>\n          </li>\n          <li>\n            <span>Additional Features</span>\n            <dd>{phone.additionalFeatures}</dd>\n          </li>\n        </ul>\n      </div>\n  );\n}","import React, { useState, useEffect} from 'react';\nimport './App.css';\nimport { PhonesList } from './PhonesList';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { PhoneDetails } from './PhoneDetails';\n\nconst App = () => {\nconst [phonesList, setPhonesList] = useState([]);\nconst [query, setQuery] = useState('');\nconst [sortOrder, setSortORder] = useState('age');\nconst [visiblePhones, setVisiblePhones] = useState([]);\n\nuseEffect(() => {\n  fetch('https://mate-academy.github.io/phone-catalogue-static/api/phones.json')\n    .then (response => response.json())\n    .then (result => \n      {setPhonesList(result)\n      setVisiblePhones(result)})\n}, [])\n\nuseEffect(() => {\n  let result = phonesList.filter(item => (\n    item.name.toLowerCase().includes(query.toLowerCase())\n  ));\n\n  setVisiblePhones(result);\n}, [query])\n\nuseEffect(() => {\n  if (sortOrder === 'name') {\n    setVisiblePhones([...visiblePhones].sort((a, b) => (\n      a.name.localeCompare(b.name)\n    )))\n  } else {\n    setVisiblePhones([...visiblePhones].sort((a, b) => (\n      a.age - b.age\n    )))\n  }\n}, [sortOrder])\n\nconst handleSearch = (e) => {\n  setQuery(e.target.value);\n};\n\nconst handleSort = (e) => {\n  setSortORder(e.target.value);\n};\n\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/static_phone_catalogue\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-md-2\">\n                <section>\n                  <p>\n                    Search:\n                    <input\n                      onChange={handleSearch}\n                      type=\"text\" \n                      placeholder=\"phone name...\"\n                    />\n                  </p>\n\n                  <p>\n                    Sort by:\n                    <select\n                      onChange={handleSort}\n                    >\n                      <option value=\"age\">Newest</option>\n                      <option value=\"name\">Alphabetical</option>  \n                    </select>\n                  </p>\n                </section>\n              </div>\n            </div>\n\n            <div className=\"col-md-10\">\n              <PhonesList phonesList={visiblePhones}/>\n            </div>\n          </div>\n        </Route>\n        <Route path=\"/static_phone_catalogue/phones/:phoneId\" component={PhoneDetails} />\n        <Redirect to=\"/static_phone_catalogue\"/>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}